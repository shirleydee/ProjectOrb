// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import ChatPanel from "@/components/ChatPanel";
// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//          <ChatPanel />
//         {children}
//       </body>
//     </html>
//   );
// }

"use client";
import { useState } from "react";
import { FaWaveSquare, FaComments } from "react-icons/fa"; // icons
import ChatPanel from "@/components/ChatPanel";
import "./globals.css";

export default function RootLayout({ children }: { children: React.ReactNode }) {
  const [liveMode, setLiveMode] = useState(false);
  const [quickChat, setQuickChat] = useState(false);

  const toggleLiveMode = () => {
    setLiveMode((prev) => !prev);
    if (typeof window !== "undefined" && window.orb) {
      window.orb.send("toggle-live-mode", !liveMode);
    }
  };

  const openQuickChat = () => {
    setQuickChat((prev) => !prev);
    if (typeof window !== "undefined" && window.orb) {
      window.orb.send("open-quick-chat", !quickChat);
    }
  };

  return (
    <html>
      <body className="flex flex-col h-screen">
        {/* Custom Header */}
        
        {/* Main Content */}
        <div className="flex-1 overflow-auto">{children}</div>

        {/* Optional: Quick Chat Panel */}
      </body>
    </html>
  );
}
